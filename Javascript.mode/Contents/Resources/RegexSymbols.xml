<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "symbol.dtd">
<symbols>

    <blocks>
        <beginregex>{</beginregex>
        <endregex>}</endregex>
    </blocks>

    <symbol id="Methods" image="SymbolM" indentation="1">
      <!--<regex>(\w{1,512}\s{0,512}:\s{0,512}function\([^)]{0,512}\))\s{0,512}{</regex>-->            <regex>\s{0,128}(["']?[^:,'"\n\r{}()]{1,512}["']?:\s{0,512}function\s{0,512}\([^)]{0,512}\))\s{0,512}{</regex>
       <postprocess>
            <find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
        </postprocess>
    </symbol>

	<!-- CODA  -->
    <symbol id="JavaScript Include" font-weight="normal" font-style="normal" image="Symbol#" indentation="0" ignoreblocks="yes">
		<regex>(?:script|SCRIPT)[^&gt;]*?\s(?:type|TYPE)\s*=\s*"?text/javascript"?[^&gt;]*?\ssrc="?([-\s_\d\w\./\?]+)"?[^&gt;]*?&gt;</regex> 	    
		<regex>(?:script|SCRIPT)[^&gt;]*?\ssrc="?([-\s_\d\w\./\?]+)"?[^&gt;]*?\s(?:type|TYPE)\s*=\s*"?text/javascript"?[^&gt;]*?&gt;</regex>    	
		<regex>(?:script|SCRIPT)[^&gt;]*?\s(?:language|LANGUAGE)\s*=\s*"?javascript"?[^&gt;]*?\ssrc\s*=\s*"?([-\s_\d\w\./\?]+)"?[^&gt;]*?&gt;</regex>    		
		<regex>(?:script|SCRIPT)[^&gt;]*?\ssrc\s*=\s*"?([-\s_\d\w\./\?]+)"?[^&gt;]*?\s(?:language|LANGUAGE)\s*=\s*"?javascript"?[^&gt;]*?&gt;</regex>
		<postprocess>
			<find>[-\s_\d\w\./\?]*?/</find>
			<replace></replace>
		</postprocess>
	</symbol>
	<!-- CODA END  -->

	<!-- CODA folded several different ways of declaring functions into this -->
	<!--<symbol id="Functions" image="SymbolF()" indentation="0" ignoreblocks="yes">
		<regex>(?&lt;=[\n\r]|^)\s*(?i)function\s+([-\w\x{FFFC}]+)\s*\((?:(?:\s*(?@['"]?[-\w\s\x{FFFC}]+['"]?)\s*,)*\s*(['"]?[-\w\s\x{FFFC}]+['"]?))?\s*\)</regex>
		<regex>([-\w\x{FFFC}]+)\s*=\s*(?i)function\s*\((?:(?:\s*(?@['"]?[-\w\s\x{FFFC}]+['"]?)\s*,)*\s*(['"]?[-\w\s\x{FFFC}]+['"]?))?\s*\)</regex>
		<postprocess>
	        <find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
			<find>\x{FFFC}</find>
            <replace></replace>
	    </postprocess>
	</symbol>
	-->
    <symbol id="Functions" image="SymbolF()" indentation="0" ignoreblocks="yes" useforautocomplete="yes">
       <regex>(?&lt;=[\n\r]|^)\s{0,512}(?i)function\s{1,512}(?'name'\w{1,512}\s{0,512}\((?'arguments'[^)]{0,512})\))(?=\s{0,512}\{)</regex>
        <postprocess>
            <!-- <find>\([^\)]*\)</find>
            <replace>()</replace> -->
            <find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
        </postprocess>
        <arguments>([\$A-Za-z0-9_]+)[ ,]*</arguments>
    </symbol>
	
	<symbol id="Function calls" image="SymbolF()" indentation="0" ignoreblocks="yes" useforautocomplete="yes" hidden="yes">
		<regex>[\.|\t]([A-Za-z0-9_]+[ \t]*)\(</regex>
		<!-- JQuery selectors -->
		<regex>(\$\([^)]+\))</regex>
	</symbol>

    <symbol id="Inline Functions" image="SymbolF()" indentation="0" ignoreblocks="yes" useforautocomplete="yes">
        <regex>(?'name'(\w{1,512})(?'trim'\s{0,512}=\s{0,512}(?i)function\s{0,512})\((?'arguments'([^\)]{0,512}))\))(?=\s{0,512}\{)</regex>
        <!--<regex>(\w+)\s*=\s*(?i)function\s*\([^\)]*\)(?=\s*\{)</regex>-->
        <postprocess>
        	<find>[\n\r]</find>
            <replace> </replace>
            <find>[ \t]+</find>
            <replace> </replace>
            <find>(?'displayname'\w{1,512})\s{0,512}=\s{0,512}(?i)function\s{0,512}\((?'arguments'([^\)]{0,512}))\)</find>
            <replace>\1(\2)</replace>
        </postprocess>
        <arguments>([\$A-Za-z0-9_]+)[ ,]*</arguments>
    </symbol>

    <symbol id="CVS/SVN conflict" font-weight="bold" image="SymbolWarn" indentation="0" ignoreblocks="no">
        <regex>^&lt;&lt;&lt;&lt;&lt;&lt;&lt;([\n\r]|.)*?======([\n\r]|.)*?&gt;&gt;&gt;&gt;&gt;&gt;&gt;</regex>
        <postprocess>
            <find>.*</find>
            <replace>Versioning conflict!</replace>
        </postprocess>
    </symbol>

    <!-- CODA -->
    <symbol id="Variable Declarations" ignoreblocks="yes" hidden="yes" useforautocomplete="yes">
    	<regex>(?&lt;=[\n\r\A;])\s*(var|const)\s+(?'variables'[^{;]{1,512});</regex>
  		<variables>(?:(?:\A)|(?:[,]))\s*([\w\d]+)[;]*</variables>
  	</symbol>
 
    <symbol id="Pragma marks" font-weight="normal" font-style="normal" image="SymbolMark" indentation="0" ignoreblocks="no" show-in-comments="yes">
        <regex>/\*\s*!(.+) \*/</regex>
    </symbol>
    
    <symbol id="Pragma marks" font-weight="normal" font-style="normal" image="SymbolMark" indentation="0" ignoreblocks="no" show-in-comments="yes">
        <regex>//[ \t]*!([^\n\r]+)</regex>
    </symbol>
    
    <symbol id="Console log" font-weight="normal" font-style="normal" image="SymbolWarn" indentation="0" ignoreblocks="no" show-in-comments="yes">
        <regex>console\.log(\([^;]+)</regex>
        <postprocess>
        	<find>(^\()|(\)$)</find>
        	<replace></replace>
        </postprocess>
    </symbol>
    
    <symbol id="TODO" font-weight="normal" font-style="normal" image="Symbol!" indentation="0" ignoreblocks="no" show-in-comments="yes">
	    <regex>TODO\s([^\n]+)</regex>
    </symbol>
	<!-- END -->

</symbols>

